{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\archi\\\\Documents\\\\Archit\\\\DL\\\\vs code\\\\quiz game\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport io from 'socket.io-client';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [totalclient, setTotalclient] = useState(0);\n  const [messageRecieved, setMessageRecieved] = useState(\"\");\n  const [connectedClients, setConnectedClients] = useState([]);\n  const sendMessage = () => {\n    socket.emit(\"send_message\", {\n      message\n    });\n  };\n  useEffect(() => {\n    socket.on('recieve_message', data => {\n      setMessageRecieved(data.message);\n    });\n    socket.on('user_count', count => {\n      setTotalclient(count);\n    });\n    socket.on('connect_to_random', clients => {\n      setConnectedClients(clients);\n    });\n    return () => {\n      socket.off('recieve_message');\n      socket.off('user_count');\n      socket.off('connect_to_random');\n    };\n  }, []);\n  const connectRandom = () => {\n    socket.emit(\"connect_random\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total people: \", totalclient]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Connected Clients: \", connectedClients.join(' and ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectRandom,\n      children: \"Connect Random\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Message..\",\n      onChange: event => {\n        setMessage(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Message:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), messageRecieved]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CxHpjb8W61S0z5ITnyztv/p6WQY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useEffect","useState","jsxDEV","_jsxDEV","socket","connect","App","_s","message","setMessage","totalclient","setTotalclient","messageRecieved","setMessageRecieved","connectedClients","setConnectedClients","sendMessage","emit","on","data","count","clients","off","connectRandom","className","children","fileName","_jsxFileName","lineNumber","columnNumber","join","onClick","type","placeholder","onChange","event","target","value","_c","$RefreshReg$"],"sources":["C:/Users/archi/Documents/Archit/DL/vs code/quiz game/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport io from 'socket.io-client'\nimport { useEffect, useState } from 'react';\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");\n  const [totalclient, setTotalclient] = useState(0);\n  const [messageRecieved, setMessageRecieved] = useState(\"\");\n  const [connectedClients, setConnectedClients] = useState([]);\n\n  const sendMessage = () => {\n    socket.emit(\"send_message\", { message });\n  }\n\n  useEffect(() => {\n    socket.on('recieve_message', (data) => {\n      setMessageRecieved(data.message);\n    });\n\n    socket.on('user_count', (count) => {\n      setTotalclient(count);\n    });\n\n    socket.on('connect_to_random', (clients) => {\n      setConnectedClients(clients);\n    });\n\n    return () => {\n      socket.off('recieve_message');\n      socket.off('user_count');\n      socket.off('connect_to_random');\n    };\n  }, []);\n\n  const connectRandom = () => {\n    socket.emit(\"connect_random\");\n  }\n\n  return (\n    <div className=\"App\">\n      <h2>Total people: {totalclient}</h2>\n      <h2>Connected Clients: {connectedClients.join(' and ')}</h2>\n      <button onClick={connectRandom}>Connect Random</button>\n      <input type=\"text\" placeholder=\"Message..\" onChange={(event) => { setMessage(event.target.value) }} />\n      <button onClick={sendMessage}>Send Message</button>\n      <h1>Message:</h1>\n      {messageRecieved}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
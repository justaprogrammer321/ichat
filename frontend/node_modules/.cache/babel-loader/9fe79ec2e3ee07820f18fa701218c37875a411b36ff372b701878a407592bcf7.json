{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\archi\\\\Documents\\\\Archit\\\\DL\\\\vs code\\\\quiz game\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport io from 'socket.io-client';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:3001');\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [totalclient, setTotalclient] = useState(0);\n  const [messages, setMessages] = useState([]);\n  const [pairedDevice, setPairedDevice] = useState('');\n  const sendMessage = () => {\n    socket.emit('send_message', {\n      message\n    });\n    setMessages([...messages, {\n      sender: 'You',\n      message\n    }]);\n    setMessage(''); // Clear the input field after sending the message\n  };\n\n  useEffect(() => {\n    socket.on('receive_message', data => {\n      setMessages([...messages, {\n        sender: 'Other',\n        message: data.message\n      }]);\n    });\n    socket.on('total_num', totalnum => {\n      setTotalclient(totalnum);\n    });\n    socket.on('paired', deviceId => {\n      setPairedDevice(deviceId);\n    });\n    return () => {\n      socket.off('receive_message');\n      socket.off('total_num');\n      socket.off('paired');\n    };\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total people: \", totalclient]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), pairedDevice && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Paired with: \", pairedDevice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Message..\",\n      value: message // Use the value prop to control the input field\n      ,\n      onChange: event => {\n        setMessage(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PeZ699sNbKX1g695mJKIvY6VX/g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","React","useEffect","useState","jsxDEV","_jsxDEV","socket","connect","App","_s","message","setMessage","totalclient","setTotalclient","messages","setMessages","pairedDevice","setPairedDevice","sendMessage","emit","sender","on","data","totalnum","deviceId","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","placeholder","value","onChange","event","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/archi/Documents/Archit/DL/vs code/quiz game/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport io from 'socket.io-client';\nimport React, { useEffect, useState } from 'react';\nconst socket = io.connect('http://localhost:3001');\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [totalclient, setTotalclient] = useState(0);\n  const [messages, setMessages] = useState([]);\n  const [pairedDevice, setPairedDevice] = useState('');\n\n  const sendMessage = () => {\n    socket.emit('send_message', { message });\n    setMessages([...messages, { sender: 'You', message }]);\n    setMessage(''); // Clear the input field after sending the message\n  };\n\n  useEffect(() => {\n    socket.on('receive_message', (data) => {\n      setMessages([...messages, { sender: 'Other', message: data.message }]);\n    });\n\n    socket.on('total_num', (totalnum) => {\n      setTotalclient(totalnum);\n    });\n\n    socket.on('paired', (deviceId) => {\n      setPairedDevice(deviceId);\n    });\n\n    return () => {\n      socket.off('receive_message');\n      socket.off('total_num');\n      socket.off('paired');\n    };\n  }, [messages]);\n\n  return (\n    <div className=\"App\">\n      <h2>Total people: {totalclient}</h2>\n      {pairedDevice && <h3>Paired with: {pairedDevice}</h3>}\n      <div className=\"message-container\">\n        {messages.map((msg, index) => (\n          <div key={index}>\n            <strong>{msg.sender}: </strong>\n            {msg.message}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        placeholder=\"Message..\"\n        value={message} // Use the value prop to control the input field\n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}>Send Message</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,EAAE,MAAM,kBAAkB;AACjC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,MAAM,GAAGN,EAAE,CAACO,OAAO,CAAC,uBAAuB,CAAC;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACxBZ,MAAM,CAACa,IAAI,CAAC,cAAc,EAAE;MAAET;IAAQ,CAAC,CAAC;IACxCK,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEM,MAAM,EAAE,KAAK;MAAEV;IAAQ,CAAC,CAAC,CAAC;IACtDC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC;;EAEDT,SAAS,CAAC,MAAM;IACdI,MAAM,CAACe,EAAE,CAAC,iBAAiB,EAAGC,IAAI,IAAK;MACrCP,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEM,MAAM,EAAE,OAAO;QAAEV,OAAO,EAAEY,IAAI,CAACZ;MAAQ,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC;IAEFJ,MAAM,CAACe,EAAE,CAAC,WAAW,EAAGE,QAAQ,IAAK;MACnCV,cAAc,CAACU,QAAQ,CAAC;IAC1B,CAAC,CAAC;IAEFjB,MAAM,CAACe,EAAE,CAAC,QAAQ,EAAGG,QAAQ,IAAK;MAChCP,eAAe,CAACO,QAAQ,CAAC;IAC3B,CAAC,CAAC;IAEF,OAAO,MAAM;MACXlB,MAAM,CAACmB,GAAG,CAAC,iBAAiB,CAAC;MAC7BnB,MAAM,CAACmB,GAAG,CAAC,WAAW,CAAC;MACvBnB,MAAM,CAACmB,GAAG,CAAC,QAAQ,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEd,oBACET,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtB,OAAA;MAAAsB,QAAA,GAAI,gBAAc,EAACf,WAAW;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACnCf,YAAY,iBAAIX,OAAA;MAAAsB,QAAA,GAAI,eAAa,EAACX,YAAY;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrD1B,OAAA;MAAKqB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC/Bb,QAAQ,CAACkB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvB7B,OAAA;QAAAsB,QAAA,gBACEtB,OAAA;UAAAsB,QAAA,GAASM,GAAG,CAACb,MAAM,EAAC,IAAE;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC9BE,GAAG,CAACvB,OAAO;MAAA,GAFJwB,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1B,OAAA;MACE8B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAW;MACvBC,KAAK,EAAE3B,OAAQ,CAAC;MAAA;MAChB4B,QAAQ,EAAGC,KAAK,IAAK;QACnB5B,UAAU,CAAC4B,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;MAChC;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACF1B,OAAA;MAAQoC,OAAO,EAAEvB,WAAY;MAAAS,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAACtB,EAAA,CAvDQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}